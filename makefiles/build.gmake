

include conf.defs db.defs build.defs

SOURCE_SUBDIRS=kernel lib

ifeq ($(origin OBJECTS),undefined)

include last-makefile.defs

SUFFIXES=.c .s .S .cxx

list-sources 		=$(foreach suffix,$(SUFFIXES),$(wildcard $(1)/*$(suffix)))

find-sources		=$(shell find $(1) -false $(foreach suffix,$(SUFFIXES),-o -name "*$(suffix)"))

srcdir_relpath		=$(subst $(abspath $(SOURCE_DIR))/,,$(abspath $(1)))

sources-to-objects 	=$(addsuffix .o, $(basename $(call srcdir_relpath,$(1))))

make-include-list 	=$(foreach subdir,$(2),$(call srcdir_relpath,$(1)/$(subdir)/Buildfile))

%/Buildfile:
	mkdir -p $*
	echo '### AUTOMATICALY GENERATED ###' > $@
	echo 'DIRS 	+= $$(dirs $$(call find-sources,$(SOURCE_DIR)/$(dir $@)))' >>$@
	echo 'OBJECTS 	+= $$(call sources-to-objects,$$(call find-sources,$(SOURCE_DIR)/$(dir $@)))' >> $@

OBJECTS :=

include $(call make-include-list,$(SOURCE_DIR),$(SOURCE_SUBDIRS))

.DEFAULT_GOAL :=

endif

#$(OBJECTS): VPATH = $(SOURCE_DIR)

CPPFLAGS += -I$(SOURCE_DIR)/include
CPPFLAGS += -I$(SOURCE_DIR)/periph

CFLAGS += -g

.PHONY:

cabbage.bin: cabbage.elf
 
VPATH = $(SOURCE_DIR)


libcabbage.a:
	$(AR) cr $@ $^

cabbage.elf:
	$(LD) $(LDFLAGS)  -L$(BUILD_DIR)/lib -L$(SOURCE_DIR)/lib/ldscripts $(foreach script,$(LDSCRIPTS),-T$(script))  --print-map -Map=cabbage.map -o $@ $^

$(OBJECTS): | build-tree

build-tree:
	mkdir -p $(DIRS)

