

include conf.defs db.defs ../build.defs

SOURCE_SUBDIRS=kernel lib

ifeq ($(origin OBJECTS),undefined)

include last-makefile.defs

SUFFIXES=.c .s .S .cxx

list-sources 		=$(foreach suffix,$(SUFFIXES),$(wildcard $(1)/*$(suffix)))

find-sources		=$(shell find $(1) -false $(foreach suffix,$(SUFFIXES),-o -name "*$(suffix)"))

relpath			=$(subst $(abspath $(1))/,,$(abspath $(2)))

srcdir-relpath		=$(call relpath,$(SOURCE_DIR),$(1))

archdir-relpath		=$(call relpath,$(ARCH_DIR),$(1))

sources-to-objects 	=$(addsuffix .o, $(basename $(1)))

std-dir			=$(foreach subdir,$(2),$(call sources-to-objects,$(call srcdir-relpath,$(call list-sources,$(SOURCE_DIR)/$(1)/$(subdir))) $(call archdir-relpath,$(call list-sources,$(ARCH_DIR)/$(1)/) $(subst asm/$(1)/,$(1)/asm/,$(call list-sources,$(ARCH_DIR)/asm/$(1)/$(subdir))))) $(eval build-tree: DIRS+=$(1)/$(subdir) $(1)/asm/$(subdir))) $(eval $(1)/asm/%.o: $(ARCH_DIR)/asm/$(1)/%.s ; $(AS) $(ASFLAGS) -o $$@ $$<)

make-include-list 	=$(foreach subdir,$(2),$(call srcdir-relpath,$(1)/$(subdir)/Buildfile))

#%/Buildfile:
#	mkdir -p $*
#	echo '### AUTOMATICALY GENERATED ###' > $@
#	echo 'DIRS 	+= $$(dirs $$(call find-sources,$(SOURCE_DIR)/$(dir $@)))' >>$@
#	echo 'OBJECTS 	+= $$(call sources-to-objects,$$(call find-sources,$(SOURCE_DIR)/$(dir $@)))' >> $@

OBJECTS :=

include $(call make-include-list,$(SOURCE_DIR),$(SOURCE_SUBDIRS))

.DEFAULT_GOAL := all

endif

CFLAGS += -g

.PHONY:

VPATH = $(SOURCE_DIR)

all: libcabbage.a kernel.o

libcabbage.a:
	$(AR) cr $@ $^

cabbage.elf:
	$(LD) $(LDFLAGS)  -L$(BUILD_DIR)/lib -L$(SOURCE_DIR)/lib/ldscripts $(foreach script,$(LDSCRIPTS),-T$(script))  --print-map -Map=cabbage.map -o $@ $^

$(OBJECTS): | build-tree

build-tree:
	mkdir -p $(DIRS)

