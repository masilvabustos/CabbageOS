

include conf.defs db.defs

SOURCE_SUBDIRS=kernel

ifeq ($(origin OBJECTS),undefined)

$(info OBJECTS not defined, recursing.)

THIS := $(lastword $(MAKEFILE_LIST))


include last-makefile.defs

SUFFIXES=.c .s .S .cxx

list-sources 		=$(foreach suffix,$(SUFFIXES),$(wildcard $(1)/*$(suffix)))

find-sources		=$(shell find $(1) -false $(foreach suffix,$(SUFFIXES),-o -name "*$(suffix)"))

sources-to-objects 	=$(addsuffix .o, $(basename $(subst $(abspath $(SOURCE_DIR))/,,$(abspath $(1)))))

make-include-list 	=$(foreach subdir,$(2),$(1)/$(subdir)/Build.gmake)

$(SOURCE_DIR)/%/Build.gmake:
	echo '### AUTOMATICALY GENERATED ###' > $@
	echo 'DIRS 	+= $$(dirs $$(call find-sources,$(dir $@)))' >>$@
	echo 'OBJECTS 	+= $$(call sources-to-objects,$$(call find-sources,$(dir $@)))' >> $@

OBJECTS :=

include $(call make-include-list,$(SOURCE_DIR),$(SOURCE_SUBDIRS))

#include $(THIS)

.DEFAULT_GOAL :=

endif


CC 		= $(DB.$(HW).cc)
AS 		= $(DB.$(HW).as)
AR 		= $(DB.$(HW).ar)
LD 		= $(DB.$(HW).ld)
LDFLAGS 	= $(DB.$(HW).ldflags)
LDSCRIPTS 	= $(DB.$(HW).ldscripts)

#$(OBJECTS): VPATH = $(SOURCE_DIR)

CPPFLAGS += -I$(SOURCE_DIR)/include

.PHONY:

libcabbage.a cabbage.elf: $(OBJECTS)

cabbage.bin: cabbage.elf
 
VPATH = $(SOURCE_DIR)

libcabbage.a:
	$(AR) cr $@ $^

cabbage.elf:
	$(LD) $(LDFLAGS)  -L$(SOURCE_DIR)/lib -L$(SOURCE_DIR)/lib/ldscripts $(foreach script,$(LDSCRIPTS),-T$(script))  --print-map -Map=cabbage.map -o $@ $^

$(OBJECTS): | build-tree

build-tree:
	mkdir -p $(DIRS)

